<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bs.store.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.bs.store.entity.User" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="created_user" property="createdUser" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="modified_user" property="modifiedUser" jdbcType="VARCHAR" />
    <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bs.store.entity.User" >
    insert into t_user (username, password,
      salt, phone, email, gender, 
      avatar, is_delete, created_user, 
      created_time, modified_user, modified_time
      )
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{salt,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER},
      #{avatar,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER}, #{createdUser,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{modifiedUser,jdbcType=VARCHAR}, #{modifiedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.bs.store.entity.User" >
    update t_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      avatar = #{avatar,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=INTEGER},
      created_user = #{createdUser,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      modified_user = #{modifiedUser,jdbcType=VARCHAR},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP}
    where uid = #{uid,jdbcType=INTEGER}
  </update>

  <update id="setUserPassword" parameterType="com.bs.store.entity.User" >
    update t_user
    set  password = #{password,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select uid, username, password, salt, phone, email, gender, avatar, is_delete, created_user, 
    created_time, modified_user, modified_time
    from t_user
    where uid = #{uid,jdbcType=INTEGER}
  </select>

  <select id="findByUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select uid, username, password, salt, phone, email, gender, avatar, is_delete, created_user,
    created_time, modified_user, modified_time
    from t_user
    where username = #{username,jdbcType=VARCHAR}
  </select>

  <select id="selectAllUsers" resultMap="BaseResultMap" >
    select uid, username, password, salt, phone, email, gender, avatar, is_delete, created_user, 
    created_time, modified_user, modified_time
    from t_user
  </select>

  <select id="selectUserById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select uid, username, password, salt, phone, email, gender, avatar, is_delete, created_user,
    created_time, modified_user, modified_time
    from t_user
    where uid = #{uid,jdbcType=INTEGER}
  </select>

  <select id="LoginUser" resultMap="BaseResultMap" parameterType="com.bs.store.entity.User" >
    select *
    from t_user
    where  username = #{username,jdbcType=VARCHAR} and  password = #{password,jdbcType=VARCHAR}
  </select>


</mapper>